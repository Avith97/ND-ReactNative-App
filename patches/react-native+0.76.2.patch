diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
new file mode 100644
index 0000000..b9a23e0
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
@@ -0,0 +1,71 @@
+
+/*
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderH
+ */
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"
+
+#import <React/RCTComponentViewProtocol.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name);
+#if RCT_NEW_ARCH_ENABLED
+#ifndef RCT_DYNAMIC_FRAMEWORKS
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV
+Class<RCTComponentViewProtocol> RNDateTimePickerCls(void) __attribute__((used)); // 0
+#endif
+
+
+Class<RCTComponentViewProtocol> RNSVGCircleCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGClipPathCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGDefsCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGEllipseCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeBlendCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeColorMatrixCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeCompositeCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeFloodCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeGaussianBlurCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeMergeCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFeOffsetCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGFilterCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGForeignObjectCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGGroupCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGImageCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGSvgViewCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGLinearGradientCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGLineCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGMarkerCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGMaskCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGPathCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGPatternCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGRadialGradientCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGRectCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGSymbolCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGTextCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGTextPathCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGTSpanCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNSVGUseCls(void) __attribute__((used)); // 2
+#if !TARGET_OS_OSX
+
+#endif
+
+
+#endif
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#pragma GCC diagnostic pop
+
diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
new file mode 100644
index 0000000..4fdbd7f
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
@@ -0,0 +1,100 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderCpp
+ */
+
+// OSS-compatibility layer
+
+#import "RCTThirdPartyFabricComponentsProvider.h"
+
+#import <string>
+#import <unordered_map>
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name) {
+  static std::unordered_map<std::string, Class (*)(void)> sFabricComponentsClassMap = {
+    #if RCT_NEW_ARCH_ENABLED
+    #ifndef RCT_DYNAMIC_FRAMEWORKS
+#if !TARGET_OS_OSX && !TARGET_OS_TV
+
+    {"RNDateTimePicker", RNDateTimePickerCls}, // 0
+#endif
+
+
+
+    {"RNSVGCircle", RNSVGCircleCls}, // 2
+
+    {"RNSVGClipPath", RNSVGClipPathCls}, // 2
+
+    {"RNSVGDefs", RNSVGDefsCls}, // 2
+
+    {"RNSVGEllipse", RNSVGEllipseCls}, // 2
+
+    {"RNSVGFeBlend", RNSVGFeBlendCls}, // 2
+
+    {"RNSVGFeColorMatrix", RNSVGFeColorMatrixCls}, // 2
+
+    {"RNSVGFeComposite", RNSVGFeCompositeCls}, // 2
+
+    {"RNSVGFeFlood", RNSVGFeFloodCls}, // 2
+
+    {"RNSVGFeGaussianBlur", RNSVGFeGaussianBlurCls}, // 2
+
+    {"RNSVGFeMerge", RNSVGFeMergeCls}, // 2
+
+    {"RNSVGFeOffset", RNSVGFeOffsetCls}, // 2
+
+    {"RNSVGFilter", RNSVGFilterCls}, // 2
+
+    {"RNSVGForeignObject", RNSVGForeignObjectCls}, // 2
+
+    {"RNSVGGroup", RNSVGGroupCls}, // 2
+
+    {"RNSVGImage", RNSVGImageCls}, // 2
+
+    {"RNSVGSvgView", RNSVGSvgViewCls}, // 2
+
+    {"RNSVGLinearGradient", RNSVGLinearGradientCls}, // 2
+
+    {"RNSVGLine", RNSVGLineCls}, // 2
+
+    {"RNSVGMarker", RNSVGMarkerCls}, // 2
+
+    {"RNSVGMask", RNSVGMaskCls}, // 2
+
+    {"RNSVGPath", RNSVGPathCls}, // 2
+
+    {"RNSVGPattern", RNSVGPatternCls}, // 2
+
+    {"RNSVGRadialGradient", RNSVGRadialGradientCls}, // 2
+
+    {"RNSVGRect", RNSVGRectCls}, // 2
+
+    {"RNSVGSymbol", RNSVGSymbolCls}, // 2
+
+    {"RNSVGText", RNSVGTextCls}, // 2
+
+    {"RNSVGTextPath", RNSVGTextPathCls}, // 2
+
+    {"RNSVGTSpan", RNSVGTSpanCls}, // 2
+
+    {"RNSVGUse", RNSVGUseCls}, // 2
+#if !TARGET_OS_OSX
+
+#endif
+
+    #endif
+    #endif
+  };
+
+  auto p = sFabricComponentsClassMap.find(name);
+  if (p != sFabricComponentsClassMap.end()) {
+    auto classFunc = p->second;
+    return classFunc();
+  }
+  return nil;
+}
diff --git a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
index 805ef11..92bb101 100644
--- a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
+++ b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
@@ -33,6 +33,7 @@ endif(CCACHE_FOUND)
 set(BUILD_DIR ${PROJECT_BUILD_DIR})
 if(CMAKE_HOST_WIN32)
         string(REPLACE "\\" "/" BUILD_DIR ${BUILD_DIR})
+        string(REPLACE "\\" "/" REACT_ANDROID_DIR ${REACT_ANDROID_DIR})
 endif()
 
 file(GLOB input_SRC CONFIGURE_DEPENDS
